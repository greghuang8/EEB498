#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(70,95), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Creeper - Home Range Density (Average)")
title(xlab = xlabel)
title(ylab = y2label)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
axis(side = 2, at = c(70,75,80,85,90,95))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("bottomleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
##########plot woodpecker data for number of home ranges (NHR)##########
y <- woodpecker_data$SROBurton_AVG_NHR
avg_SRO <- woodpecker_data$SROBurton_AVG_NHR
err_SRO <- woodpecker_data$SROBurtonERROR_NHR
avg_SQ <- woodpecker_data$X1SQFireAVG_NHR
err_SQ <- woodpecker_data$X1SQFireERROR_NHR
avg_FIRE <- woodpecker_data$FireAVG_NHR
err_FIRE <- woodpecker_data$FireERROR_NHR
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(0,50), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Woodpeckers - Number of Home Ranges (Average)")
title(xlab = xlabel)
title(ylab = ylabel)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
axis(side = 2, at = c(0,10,20,30,40))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("bottomleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
##########plot woodpecker data for home range density (HRD)##########
y <- woodpecker_data$SROBurton_AVG_HRD
avg_SRO <- woodpecker_data$SROBurton_AVG_HRD
err_SRO <- woodpecker_data$SROBurtonERROR_HRD
avg_SQ <- woodpecker_data$X1SQFireAVG_HRD
err_SQ <- woodpecker_data$X1SQFireERROR_HRD
avg_FIRE <- woodpecker_data$FireAVG_HRD
err_FIRE <- woodpecker_data$FireERROR_HRD
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(0,90), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Woodpecker - Home Range Density (Average)")
title(xlab = xlabel)
title(ylab = y2label)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
#format y-axis
axis(side = 2, at = c(0,20,40,60,80))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("bottomleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
##########plot marten data for number of home ranges (NHR)##########
y <- marten_data$SROBurton_AVG_NHR
avg_SRO <- marten_data$SROBurton_AVG_NHR
err_SRO <- marten_data$SROBurtonERROR_NHR
avg_SQ <- marten_data$X1SQFireAVG_NHR
err_SQ <- marten_data$X1SQFireERROR_NHR
avg_FIRE <- marten_data$FireAVG_NHR
err_FIRE <- marten_data$FireERROR_NHR
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(5,17), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Marten - Number of Home Ranges (Average)")
title(xlab = xlabel)
title(ylab = ylabel)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
axis(side = 2, at = c(6,8,10,12,14,16))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("topleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
##########plot marten data for home range density (HRD)##########
y <- marten_data$SROBurton_AVG_HRD
avg_SRO <- marten_data$SROBurton_AVG_HRD
err_SRO <- marten_data$SROBurtonERROR_HRD
avg_SQ <- marten_data$X1SQFireAVG_HRD
err_SQ <- marten_data$X1SQFireERROR_HRD
avg_FIRE <- marten_data$FireAVG_HRD
err_FIRE <- marten_data$FireERROR_HRD
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(65,100), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Marten - Home Range Density (Average)")
title(xlab = xlabel)
title(ylab = y2label)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
#format y-axis
axis(side = 2, at = c(70,80,90,100))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("topleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
y <- woodpecker_data$SROBurton_AVG_NHR
avg_SRO <- woodpecker_data$SROBurton_AVG_NHR
err_SRO <- woodpecker_data$SROBurtonERROR_NHR
avg_SQ <- woodpecker_data$X1SQFireAVG_NHR
err_SQ <- woodpecker_data$X1SQFireERROR_NHR
avg_FIRE <- woodpecker_data$FireAVG_NHR
err_FIRE <- woodpecker_data$FireERROR_NHR
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(0,50), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Woodpecker - Number of Home Ranges (Average)")
title(xlab = xlabel)
title(ylab = ylabel)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
axis(side = 2, at = c(0,10,20,30,40))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("bottomleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
test <- read.delim("test.txt", header = TRUE)
str(test)
View(test)
#Ricardo's data plots
#Greg Huang
#Set working directory
setwd("C:/Users/Greg/Documents/4th/EEB498/EEB498_Project")
#load in data for creeper
creeper_data <- read.csv("Creeper_data.csv", header = TRUE)
str(creeper_data)
#load in data for woodpecker
woodpecker_data <- read.csv("Woodpecker_data.csv", header = TRUE)
str(woodpecker_data)
#load in data for marten
marten_data <- read.csv("Marten_data.csv", header = TRUE)
str(marten_data)
##########Plot creeper data for Number of Home Ranges##########
index <- c(1:19)
y <- creeper_data$SROBurton_AVG_NHR
xlabel <- "Years"
ylabel <- "Number of Home Ranges (mean+/-S.E.)"
y2label <- "Home Range Density (mean+/-S.E.)"
avg_SRO <- creeper_data$SROBurton_AVG_NHR
err_SRO <- creeper_data$SROBurtonERROR_NHR
avg_SQ <- creeper_data$X1SQFireAVG_NHR
err_SQ <- creeper_data$X1SQFireERROR_NHR
avg_FIRE <- creeper_data$FireAVG_NHR
err_FIRE <- creeper_data$FireERROR_NHR
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(1000,4300), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Creeper - Number of Home Ranges (Average)")
title(xlab = xlabel)
title(ylab = ylabel)
box()
#add line for 1SQFIRE_AVG
lines(creeper_data$X1SQFireAVG_NHR, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(creeper_data$FireAVG_NHR, type = "o", pch = 2, lty = 3)
axis(side = 2, at = c(1000,1500,2000,2500,3000,3500,4000,4200))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("bottomleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
##########plot creeper data for home range density (HRD)##########
y <- creeper_data$SROBurton_AVG_HRD
avg_SRO <- creeper_data$SROBurton_AVG_HRD
err_SRO <- creeper_data$SROBurtonERROR_HRD
avg_SQ <- creeper_data$X1SQFireAVG_HRD
err_SQ <- creeper_data$X1SQFireERROR_HRD
avg_FIRE <- creeper_data$FireAVG_HRD
err_FIRE <- creeper_data$FireERROR_HRD
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(70,95), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Creeper - Home Range Density (Average)")
title(xlab = xlabel)
title(ylab = y2label)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
axis(side = 2, at = c(70,75,80,85,90,95))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("bottomleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
##########plot woodpecker data for number of home ranges (NHR)##########
y <- woodpecker_data$SROBurton_AVG_NHR
avg_SRO <- woodpecker_data$SROBurton_AVG_NHR
err_SRO <- woodpecker_data$SROBurtonERROR_NHR
avg_SQ <- woodpecker_data$X1SQFireAVG_NHR
err_SQ <- woodpecker_data$X1SQFireERROR_NHR
avg_FIRE <- woodpecker_data$FireAVG_NHR
err_FIRE <- woodpecker_data$FireERROR_NHR
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(0,50), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Woodpecker - Number of Home Ranges (Average)")
title(xlab = xlabel)
title(ylab = ylabel)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
axis(side = 2, at = c(0,10,20,30,40))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("bottomleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
##########plot woodpecker data for home range density (HRD)##########
y <- woodpecker_data$SROBurton_AVG_HRD
avg_SRO <- woodpecker_data$SROBurton_AVG_HRD
err_SRO <- woodpecker_data$SROBurtonERROR_HRD
avg_SQ <- woodpecker_data$X1SQFireAVG_HRD
err_SQ <- woodpecker_data$X1SQFireERROR_HRD
avg_FIRE <- woodpecker_data$FireAVG_HRD
err_FIRE <- woodpecker_data$FireERROR_HRD
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(0,90), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Woodpecker - Home Range Density (Average)")
title(xlab = xlabel)
title(ylab = y2label)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
#format y-axis
axis(side = 2, at = c(0,20,40,60,80))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("bottomleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
##########plot marten data for number of home ranges (NHR)##########
y <- marten_data$SROBurton_AVG_NHR
avg_SRO <- marten_data$SROBurton_AVG_NHR
err_SRO <- marten_data$SROBurtonERROR_NHR
avg_SQ <- marten_data$X1SQFireAVG_NHR
err_SQ <- marten_data$X1SQFireERROR_NHR
avg_FIRE <- marten_data$FireAVG_NHR
err_FIRE <- marten_data$FireERROR_NHR
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(5,17), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Marten - Number of Home Ranges (Average)")
title(xlab = xlabel)
title(ylab = ylabel)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
axis(side = 2, at = c(6,8,10,12,14,16))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("topleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
##########plot marten data for home range density (HRD)##########
y <- marten_data$SROBurton_AVG_HRD
avg_SRO <- marten_data$SROBurton_AVG_HRD
err_SRO <- marten_data$SROBurtonERROR_HRD
avg_SQ <- marten_data$X1SQFireAVG_HRD
err_SQ <- marten_data$X1SQFireERROR_HRD
avg_FIRE <- marten_data$FireAVG_HRD
err_FIRE <- marten_data$FireERROR_HRD
#plot SROBURTON_AVG
plot(y,type = "o", xlab = xlabel, ylab = ylabel, pch =0, ylim = c(65,100), axes = FALSE, ann = FALSE)
axis(1, at=1:19, lab=c(5,10,15,20,25,30,35,40,45,50,100,150,200,250,300,350,400,450,500))
title(main = "Marten - Home Range Density (Average)")
title(xlab = xlabel)
title(ylab = y2label)
box()
#add line for 1SQFIRE_AVG
lines(avg_SQ, type = "o", pch = 1, lty = 2)
#add line for FIRE_AVG
lines(avg_FIRE, type = "o", pch = 2, lty = 3)
#format y-axis
axis(side = 2, at = c(70,80,90,100))
#add error bars for all three lines
arrows(index, avg_SRO-err_SRO, index, avg_SRO+err_SRO, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_SQ-err_SQ, index, avg_SQ+err_SQ, length = 0.05, angle = 90, code = 3 )
arrows(index, avg_FIRE-err_FIRE, index, avg_FIRE+err_FIRE, length = 0.05, angle = 90, code = 3 )
#add legend
legend("topleft",legend =c("SROBurton", "1SQFire", "Fire"), lty = 1:3, pch = 0:2, cex = 0.8, bty = "n")
getwd()
ls
cor_analysis <- read.csv("Correlation_analysis.csv")
urban_cats <- read.csv("Urban_categories_20.csv")
cor(cor_analysis$PC_Urban.PC1, urban_cats$PC_Urban_min)
cor(cor_analysis$PC_Urban.PC1, cor_analysis$PC_Urban.PC2)
cor(cor_analysis)
View(cor_analysis)
View(urban_cats)
cor(cor_analysis, cor_analysis$pdSTD)
df <- data.frame(cor_analysis)
View(df)
replace(df, df > -1.082012 & df < -0.850579, 1)
key <- data.frame(urban_cats)
View(key)
key[2,3]
key[1,1]
key[1,2]
replace(df, df > key[1,2] & df < key[1,3], 1)
replace(df, df > key[2,2] & df < key[2,3], 2)
replace(df, df > key[3,2] & df < key[3,3], 3)
replace(df, df > key[4,2] & df < key[4,3], 4)
replace(df, df > key[5,2] & df < key[5,3], 5)
replace(df, df > key[6,2] & df < key[6,3], 6)
replace(df, df > key[7,2] & df < key[7,3], 7)
replace(df, df > key[8,2] & df < key[8,3], 8)
replace(df, df > key[9,2] & df < key[9,3], 9)
replace(df, df > key[10,2] & df < key[10,3], 10)
replace(df, df > key[11,2] & df < key[11,3], 11)
replace(df, df > key[12,2] & df < key[12,3], 12)
replace(df, df > key[13,2] & df < key[13,3], 13)
replace(df, df > key[14,2] & df < key[14,3], 14)
replace(df, df > key[15,2] & df < key[15,3], 15)
replace(df, df > key[16,2] & df < key[16,3], 16)
replace(df, df > key[17,2] & df < key[17,3], 17)
replace(df, df > key[18,2] & df < key[18,3], 18)
replace(df, df > key[19,2] & df < key[19,3], 19)
replace(df, df > key[20,2] & df < key[20,3], 20)
View(df)
replace(df, df > key[1,2] & df < key[1,3], 1)
View(df)
i <- 0
j <- 0
View(df)
View(cor_analysis)
View(cor_analysis)
replace(df, df > -2 & df < 2, 1)
View(df)
df.test <- replace(df, df > -2 & df < 2, 1)
View(df.test)
df_update <- replace(df, df > key[1,2] & df < key[1,3], 1)
df_update <- replace(df, df > key[2,2] & df < key[2,3], 2)
df_update <- replace(df, df > key[3,2] & df < key[3,3], 3)
df_update <- replace(df, df > key[4,2] & df < key[4,3], 4)
df_update <- replace(df, df > key[5,2] & df < key[5,3], 5)
df_update <- replace(df, df > key[6,2] & df < key[6,3], 6)
df_update <- replace(df, df > key[7,2] & df < key[7,3], 7)
df_update <- replace(df, df > key[8,2] & df < key[8,3], 8)
df_update <- replace(df, df > key[9,2] & df < key[9,3], 9)
df_update <- replace(df, df > key[10,2] & df < key[10,3], 10)
df_update <- replace(df, df > key[11,2] & df < key[11,3], 11)
df_update <- replace(df, df > key[12,2] & df < key[12,3], 12)
df_update <- replace(df, df > key[13,2] & df < key[13,3], 13)
df_update <- replace(df, df > key[14,2] & df < key[14,3], 14)
df_update <- replace(df, df > key[15,2] & df < key[15,3], 15)
df_update <- replace(df, df > key[16,2] & df < key[16,3], 16)
df_update <- replace(df, df > key[17,2] & df < key[17,3], 17)
df_update <- replace(df, df > key[18,2] & df < key[18,3], 18)
df_update <- replace(df, df > key[19,2] & df < key[19,3], 19)
df_update <- replace(df, df > key[20,2] & df < key[20,3], 20)
View(df_update)
df <- replace(df, df > key[1,2] & df < key[1,3], 1)
df <- replace(df, df > key[2,2] & df < key[2,3], 2)
df <- replace(df, df > key[3,2] & df < key[3,3], 3)
df <- replace(df, df > key[4,2] & df < key[4,3], 4)
df <- replace(df, df > key[5,2] & df < key[5,3], 5)
df <- replace(df, df > key[6,2] & df < key[6,3], 6)
df <- replace(df, df > key[7,2] & df < key[7,3], 7)
df <- replace(df, df > key[8,2] & df < key[8,3], 8)
df <- replace(df, df > key[9,2] & df < key[9,3], 9)
df <- replace(df, df > key[10,2] & df < key[10,3], 10)
df <- replace(df, df > key[11,2] & df < key[11,3], 11)
df <- replace(df, df > key[12,2] & df < key[12,3], 12)
View(df)
df <- data.frame(cor_analysis)
df <- replace(df, df > key[1,2] & df < key[1,3], 1)
df <- replace(df, df > key[2,2] & df < key[2,3], 2)
df <- replace(df, df > key[3,2] & df < key[3,3], 3)
df <- replace(df, df > key[4,2] & df < key[4,3], 4)
df <- replace(df, df > key[5,2] & df < key[5,3], 5)
df <- replace(df, df > key[6,2] & df < key[6,3], 6)
df <- replace(df, df > key[7,2] & df < key[7,3], 7)
df <- replace(df, df > key[8,2] & df < key[8,3], 8)
df <- replace(df, df > key[9,2] & df < key[9,3], 9)
df <- replace(df, df > key[10,2] & df < key[10,3], 10)
df <- replace(df, df > key[11,2] & df < key[11,3], 11)
df <- replace(df, df > key[12,2] & df < key[12,3], 12)
df <- replace(df, df > key[13,2] & df < key[13,3], 13)
df <- replace(df, df > key[14,2] & df < key[14,3], 14)
df <- replace(df, df > key[15,2] & df < key[15,3], 15)
df <- replace(df, df > key[16,2] & df < key[16,3], 16)
df <- replace(df, df > key[17,2] & df < key[17,3], 17)
df <- replace(df, df > key[18,2] & df < key[18,3], 18)
df <- replace(df, df > key[19,2] & df < key[19,3], 19)
df <- replace(df, df > key[20,2] & df < key[20,3], 20)
View(df)
cor(df,cor_analysis$pdSTD)
write.csv(df, "categorized_urban.csv")
write.csv(cor_results, "cor_results_categorized.csv")
cor_results M<- data.frame(cor_results)
cor_results <- data.frame(cor)
cor_results <- as.data.frame(cor)
help(write.table)
write.table(cor, "cor_results_categorized.csv")
cor(cor_analysis$PC_Urban.PC1+cor_analysis$PC_Urban.PC2+cor_analysis$PC_Natural.PC1+cor_analysis$PC_Natural.PC2, cor_analysis$pdSTD)
cor(cor_analysis)
cor(cor_analysis$PC_Urban.PC1,cor_analysis$pdSTD)
cor(cor_analysis$PC_Urban.PC2,cor_analysis$pdSTD)
cor(cor_analysis$PC_Natural.PC1,cor_analysis$pdSTD)
cor(cor_analysis$PC_Natural.PC2,cor_analysis$pdSTD)
View(cor_analysis)
df <- replace(df, df >= key[1,2] & df < key[1,3], 1)
df <- replace(df, df >= key[2,2] & df < key[2,3], 2)
df <- replace(df, df >= key[3,2] & df < key[3,3], 3)
df <- replace(df, df >= key[4,2] & df < key[4,3], 4)
df <- replace(df, df >= key[5,2] & df < key[5,3], 5)
df <- replace(df, df >= key[6,2] & df < key[6,3], 6)
df <- replace(df, df >= key[7,2] & df < key[7,3], 7)
df <- replace(df, df >= key[8,2] & df < key[8,3], 8)
df <- replace(df, df >= key[9,2] & df < key[9,3], 9)
df <- replace(df, df >= key[10,2] & df < key[10,3], 10)
df <- replace(df, df >= key[11,2] & df < key[11,3], 11)
df <- replace(df, df >= key[12,2] & df < key[12,3], 12)
df <- replace(df, df >= key[13,2] & df < key[13,3], 13)
df <- replace(df, df >= key[14,2] & df < key[14,3], 14)
df <- replace(df, df >= key[15,2] & df < key[15,3], 15)
df <- replace(df, df >= key[16,2] & df < key[16,3], 16)
df <- replace(df, df >= key[17,2] & df < key[17,3], 17)
df <- replace(df, df >= key[18,2] & df < key[18,3], 18)
df <- replace(df, df >= key[19,2] & df < key[19,3], 19)
df <- replace(df, df >= key[20,2] & df < key[20,3], 20)
pd_included <- read.csv("pd_included.csv")
hist(pd_included$pdSTD)
help(hist)
hist(pd_included$pdSTD, breaks = 5)
hist(pd_included$pdSTD, breaks = 4)
hist(pd_included$pdSTD, breaks = 5)
bins <- (0,1000,2000,3000,4000,5000,6000,7000)
bins <- c(0,1000,2000,3000,4000,5000,6000,7000)
hist(pd_included$pdSTD, breaks = bins)
hist(pd_included$pdSTD, breaks = 4)
hist(pd_included$pdSTD, breaks = 5)
hist(pd_included$pdSTD, breaks = 6)
hist(pd_included$pdSTD, breaks = 7)
hist(pd_included$pdSTD, breaks = 5)
test <- hist(pd_included$pdSTD, breaks = 5)
test$counts
bin <- c(0, 1000, 5000, 10000, 150000)
test <- hist(pd_included$pdSTD, breaks = bin)
test$counts
bin <- c(0, 500, 1000, 2000, 5000, 150000)
test <- hist(pd_included$pdSTD, breaks = bin)
test$counts
numbers <- c(5,2,6,83435,54)
help(c)
x <- 5:2
x <- 5:9
lastNum <- tail(numbers, 1)
firstNum <- head(numbers,1)
lastNum <- tail(numbers, 4)
numbers <- c(5,2,6,83435,54)
lastNum <- tail(numbers, 4)
lastNum <- tail(numbers, 3)
lastNum <- tail(numbers, 2)
firstNum <- head(numbers,4)
rgStripes <- c("red", "grey")
hist(rnorm(200), col=rgStripes)
count(abcd)
freq(abcd)
help(hist)
abcd$counts
counts(abcd)
abcd <- hist(rnorm(200), col=rgStripes)
abcd$counts
sum(abcd$counts)
